name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            platform: linux
          - os: macos-latest
            arch: amd64
            platform: darwin
          - os: macos-latest
            arch: arm64
            platform: darwin
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller requests

    - name: Set up QEMU
      if: matrix.arch == 'arm64'
      uses: docker/setup-qemu-action@v3
      
    - name: Build binary
      run: |
        if [ "${{ matrix.platform }}" = "darwin" ] && [ "${{ matrix.arch }}" = "arm64" ]; then
          # 使用特殊的构建命令
          python -m PyInstaller --target-arch=arm64 \
            --clean --onefile \
            --name=i18n-manager \
            --add-data="src/i18_manager/lang:lang" \
            --hidden-import=requests \
            --hidden-import=json \
            --hidden-import=codecs \
            --hidden-import=argparse \
            src/i18_manager/i18n_manager.py
        else
          python build.py
        fi
        
    - name: Test binary
      run: |
        chmod +x dist/i18n-manager
        if [ "${{ matrix.platform }}" = "darwin" ] && [ "${{ matrix.arch }}" = "arm64" ]; then
          # 对于 macOS arm64，只检查文件类型
          file dist/i18n-manager
        else
          ./dist/i18n-manager --version || true
          file dist/i18n-manager
        fi
        
    - name: Rename binary for distribution
      run: |
        mv dist/i18n-manager "dist/i18n-manager-${{ matrix.platform }}-${{ matrix.arch }}"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dist/i18n-manager-*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: binaries
        path: dist

    - name: List files
      run: |
        ls -la dist/
        file dist/*

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 