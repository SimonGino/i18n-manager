name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]
        exclude:
          - os: ubuntu-latest
            arch: arm64
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller requests
        
    - name: Build binary
      env:
        ARCHFLAGS: "${{ matrix.arch == 'arm64' && '-arch arm64' || '' }}"
      run: |
        if [ "${{ matrix.os }}" = "macos-latest" ] && [ "${{ matrix.arch }}" = "arm64" ]; then
          # 特殊处理 macOS arm64 构建
          python build.py
          # 验证二进制文件
          file dist/i18n-manager
          otool -L dist/i18n-manager || true
        else
          python build.py
        fi
        
    - name: Test binary
      run: |
        chmod +x dist/i18n-manager
        ./dist/i18n-manager --version || true
        file dist/i18n-manager
        
    - name: Rename binary for distribution
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          mv dist/i18n-manager "dist/i18n-manager-linux-${{ matrix.arch }}"
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          mv dist/i18n-manager "dist/i18n-manager-darwin-${{ matrix.arch }}"
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dist/i18n-manager-*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: binaries
        path: dist

    - name: List files
      run: |
        ls -la dist/
        file dist/*

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 